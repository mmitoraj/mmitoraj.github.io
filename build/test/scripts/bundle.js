!function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){mocha.setup("bdd"),mocha.reporter("html"),window.expect=chai.expect,window.NOTEBOOK_URL={url:"/build/"}.url,window.FIXTURES_URL=window.NOTEBOOK_URL+"/test/fixtures"},{}],2:[function(require,module,exports){window.extend=function(obj){for(var sources=Array.prototype.slice.call(arguments,1),i=0;i<sources.length;i++)for(var prop in sources[i])obj[prop]=sources[i][prop];return obj},window.fakeKey=function(cm,code,props){"string"==typeof code&&(code=code.charCodeAt(0));var e=extend({type:"keydown",keyCode:code,preventDefault:function(){},stopPropagation:function(){}},props);cm.triggerOnKeyDown(e)},window.testCompletion=function(editor,text,done){editor.on("refreshCompletion",function refresh(cm,results){return editor.off("refreshCompletion",refresh),done(App._.pluck(results,"value"))}),editor.focus(),editor.setValue(text),editor.setCursor(editor.lastLine(),1/0);var cursor=editor.getCursor();App.CodeMirror.Editor.signal(editor,"change",editor,{origin:"+input",to:extend({},cursor),from:extend({},cursor,{ch:cursor.ch-1}),text:[text.slice(-1)]})},window.simulateEvent=function(){var eventMatchers={HTMLEvents:/^(?:load|unload|abort|error|select|change|submit|reset|focus|blur|resize|scroll|focusin|focusout)$/,MouseEvents:/^(?:click|dblclick|mouse(?:enter|leave|down|up|over|move|out))$/,KeyboardEvent:/^(?:key(?:down|press|up))$/},defaultOptions={pointerX:0,pointerY:0,button:0,ctrlKey:!1,altKey:!1,shiftKey:!1,metaKey:!1,bubbles:!0,cancelable:!0};return function(element,eventName,options){options=extend({},defaultOptions,options||{});var oEvent,eventType=null;for(var name in eventMatchers)if(eventMatchers[name].test(eventName)){eventType=name;break}if(!eventType)throw new SyntaxError("Only HTMLEvents, MouseEvents and KeyboardEvent interfaces are supported");return document.createEvent?(oEvent=document.createEvent(eventType),"HTMLEvents"===eventType?oEvent.initEvent(eventName,options.bubbles,options.cancelable):"KeyboardEvent"===eventType?oEvent.initKeyboardEvent(eventName,options.bubbles,options.cancelable,document.defaultView,options["char"],options.key,options.location,"",options.repeat,options.locale):oEvent.initMouseEvent(eventName,options.bubbles,options.cancelable,document.defaultView,options.button,options.pointerX,options.pointerY,options.pointerX,options.pointerY,options.ctrlKey,options.altKey,options.shiftKey,options.metaKey,options.button,element),element.dispatchEvent(oEvent)):(options.clientX=options.pointerX,options.clientY=options.pointerY,oEvent=extend(document.createEventObject(),options),element.fireEvent("on"+eventName,oEvent)),element}}()},{}]},{},[1,2]);